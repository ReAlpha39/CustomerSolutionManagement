name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    tags:
    - '*'

# on: push    # Default will running for every branch.

jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:

    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'

    # Restore keystore
    - name: Restore Keystore
      run: |
        echo "${{ secrets.RELEASE_KEYSTORE }}" > upload-keystore.jks.asc
        gpg --batch --passphrase "${{ secrets.GPG_PASSPHRASE }}" -d -o android/app/upload-keystore.jks upload-keystore.jks.asc
        echo "storeFile=upload-keystore.jks" >> android/key.properties
        echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
        echo "storePassword=${{ secrets.STORE_KEY_PASSWORD }}" >> android/key.properties
        echo "keyPassword=${{ secrets.STORE_KEY_PASSWORD }}" >> android/key.properties

    # Setup the flutter environment.
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable' # 'dev', 'alpha', default to: 'stable'
        # flutter-version: '1.12.x' # you can also specify exact version of flutter

    # Get flutter dependencies.
    - run: flutter pub get

    # Check for any formatting issues in the code.
    - run: flutter format --set-exit-if-changed .

    # Statically analyze the Dart code for any errors.
    - run: flutter analyze .

    # Run widget tests for our flutter project.
    # - run: flutter test

    # Build apk.
    - run: flutter build apk --split-per-abi

    # Upload generated apk to the release page.
    - name: Create release apk
      uses: ncipollo/release-action@v1
      with:
        artifacts: "build/app/outputs/apk/release/*.apk"
        token: ${{ secrets.CSM_WORKFLOW }}

    - name: Send status to Discord
      uses: nebularg/actions-discord-webhook@v1
      with:
        webhook_url: ${{ secrets.DISCORD_WEBHOOK }} # required
        status: ${{ job.status }} # optional, this is the default
      if: always()

